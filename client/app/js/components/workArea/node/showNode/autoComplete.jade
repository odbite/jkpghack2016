.angucomplete-holder(ng-class="{'angucomplete-dropdown-visible': showDropdown}")
  input(
    ng-model="searchStr"
    ng-disabled="disableInput"
    type="text"
    placeholder="{{placeholder}}"
    ng-focus="onFocusHandler(); resetHideResults()"
    class="{{inputClass}}"
    ng-blur="hideResults($event)"
    autocapitalize="off"
    autocorrect="off"
    autocomplete="off"
    ng-change="inputChangeHandler(searchStr)")

  .angucomplete-dropdown(ng-show="showDropdown")
    .angucomplete-searching(
      ng-show="searching"
      ng-bind="textSearching")

    .angucomplete-searching(
      ng-show="!searching && (!results || results.length == 0)"
      ng-bind="textNoResults")

    .angucomplete-row(
      ng-repeat="result in results"
      ng-click="selectResult(result)"
      ng-mouseenter="hoverRow($index)"
      ng-class="{'angucomplete-selected-row': $index == currentIndex}")

      .angucomplete-title(
        ng-if="matchClass"
        ng-bind-html="result.title")

      .angucomplete-title(ng-if="!matchClass")
        | {{ result.title }}

      .angucomplete-description(
        ng-if="matchClass && result.description && result.description != ''"
        ng-bind-html="result.description")

      .angucomplete-description(ng-if="!matchClass && result.description && result.description != ''")
        | {{result.description}}

    .angucomplete-row(
      ng-click="selectResult({title: searchStr, originalObject: { name: searchStr, custom: true }})"
      ng-mouseenter="hoverRow(results.length)"
      ng-class="{'angucomplete-selected-row': results.length == currentIndex}")

      .angucomplete-title
        | Create new keyword #[strong {{ searchStr }}]
